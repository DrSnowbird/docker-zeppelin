{"paragraphs":[{"text":"import org.apache.spark.rdd._\nimport org.apache.spark._\nimport org.apache.spark.SparkContext._\n\nimport sys.process._\n\"mkdir -p /tmp/data\"!!\n\nif (!new java.io.File(\"/tmp/data/closes.csv\").exists)\n  \"wget https://s3-eu-west-1.amazonaws.com/spark-notebook-data/closes.csv -O /tmp/data/closes.csv\"!!","dateUpdated":"2016-11-15T04:21:15+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479182565207_1526335434","id":"20161115-040245_1921574216","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.rdd._\n\nimport org.apache.spark._\n\nimport org.apache.spark.SparkContext._\n\nimport sys.process._\n\nwarning: there was one feature warning; re-run with -feature for details\n\nres8: String = \"\"\n\nwarning: there was one feature warning; re-run with -feature for details\n\nres9: Any = ()\n"},"dateCreated":"2016-11-15T04:02:45+0000","dateStarted":"2016-11-15T04:21:15+0000","dateFinished":"2016-11-15T04:21:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:151"},{"text":"%sh\nls -al /tmp/data/closes.csv\n","dateUpdated":"2016-11-15T04:09:49+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479182600048_-537965009","id":"20161115-040320_1503348487","result":{"code":"SUCCESS","type":"TEXT","msg":"-rw-r--r-- 1 root root 181525256 Feb  6  2015 /tmp/data/closes.csv\n"},"dateCreated":"2016-11-15T04:03:20+0000","dateStarted":"2016-11-15T04:09:49+0000","dateFinished":"2016-11-15T04:09:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:152"},{"text":"\nimport org.apache.spark._\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.rdd._\ncase class Quote(stock:String, date:String, price:Double) extends java.io.Serializable\n","dateUpdated":"2016-11-15T04:22:53+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479183611466_344100587","id":"20161115-042011_2075616578","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark._\n\nimport org.apache.spark.SparkContext._\n\nimport org.apache.spark.rdd._\n\ndefined class Quote\n"},"dateCreated":"2016-11-15T04:20:11+0000","dateStarted":"2016-11-15T04:22:53+0000","dateFinished":"2016-11-15T04:22:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:153"},{"text":"%sh\nhead /tmp/data/closes.csv","dateUpdated":"2016-11-15T04:20:17+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479182966365_-473839469","id":"20161115-040926_2137556764","result":{"code":"SUCCESS","type":"TEXT","msg":"ASTE,2011-12-06,33.93\nASTE,2012-03-14,36.84\nMFN,2012-03-14,13.74\nJBLU,2012-03-14,5.07\nHME,2012-04-11,56.06\nCOCO,2012-03-14,4.33\nFSBI,2011-05-12,8.91\nFSBI,2011-05-13,8.91\nHME,2012-04-12,56.03\nASTE,2012-03-22,36.16\n"},"dateCreated":"2016-11-15T04:09:26+0000","dateStarted":"2016-11-15T04:20:17+0000","dateFinished":"2016-11-15T04:20:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:154"},{"text":"val closes:RDD[Quote] = sc.textFile(\"/tmp/data/closes.csv\")\n                                   .map(_.split(\",\").toList)\n                                   .map{ case s::d::p::Nil => Quote(s, d, p.toDouble)}\n","dateUpdated":"2016-11-15T04:35:14+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479182850196_-1958520889","id":"20161115-040730_682026552","result":{"code":"ERROR","type":"TEXT","msg":"\n\n\n\n<console>:68: error: not enough arguments for method parallelize: (seq: Seq[T], numSlices: Int)(implicit evidence$1: scala.reflect.ClassTag[T])org.apache.spark.rdd.RDD[T].\nUnspecified value parameter seq.\n       val closes:RDD[Quote] = sc.parallelize().textFile(\"/tmp/data/closes.csv\")\n                                             ^\n\n\n\n\n\n<console>:70: error: type mismatch;\n found   : Any\n required: String\n                                          .map{ case s::d::p::Nil => Quote(s, d, p.toDouble)}\n                                                                           ^\n\n\n\n\n\n<console>:70: error: type mismatch;\n found   : Any\n required: String\n                                          .map{ case s::d::p::Nil => Quote(s, d, p.toDouble)}\n                                                                              ^\n\n\n\n<console>:70: error: value toDouble is not a member of Any\n                                          .map{ case s::d::p::Nil => Quote(s, d, p.toDouble)}\n                                                                                   ^\n"},"dateCreated":"2016-11-15T04:07:30+0000","dateStarted":"2016-11-15T04:34:13+0000","dateFinished":"2016-11-15T04:34:13+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:155"},{"text":"val byDate = closes.keyBy(_.date)\n","dateUpdated":"2016-11-15T04:33:35+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479182989399_-1854471765","id":"20161115-040949_1227168607","result":{"code":"SUCCESS","type":"TEXT","msg":"\nbyDate: org.apache.spark.rdd.RDD[(String, Quote)] = MapPartitionsRDD[10] at keyBy at <console>:70\n"},"dateCreated":"2016-11-15T04:09:49+0000","dateStarted":"2016-11-15T04:33:36+0000","dateFinished":"2016-11-15T04:33:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:156"},{"text":"def minByDate = byDate.combineByKey[(String, Double)](                                                                                           // `def` to force spark recomputing... otherwise it's smart enough to reuse previous RDDs...\n  (x:Quote) => (x.stock, x.price), \n  (d:(String, Double), l:Quote) => if (d._2 < l.price) d else (l.stock, l.price),\n  (d1:(String, Double), d2:(String, Double)) => if (d1._2 < d2._2) d1 else d2\n)\n","dateUpdated":"2016-11-15T04:35:24+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479184415994_-1990819016","id":"20161115-043335_1594245850","result":{"code":"SUCCESS","type":"TEXT","msg":"\nminByDate: org.apache.spark.rdd.RDD[(String, (String, Double))]\n"},"dateCreated":"2016-11-15T04:33:35+0000","dateStarted":"2016-11-15T04:35:24+0000","dateFinished":"2016-11-15T04:35:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:157"},{"text":"minByDate.take(2).toList.mkString(\"\\n\")\n","dateUpdated":"2016-11-15T04:35:53+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479184524451_1004602769","id":"20161115-043524_1340388154","result":{"code":"SUCCESS","type":"TEXT","msg":"\n\n\nres12: String =\n(2012-04-05,(FULO,0.0))\n(2012-10-17,(FRCN,0.0))\n"},"dateCreated":"2016-11-15T04:35:24+0000","dateStarted":"2016-11-15T04:35:53+0000","dateFinished":"2016-11-15T04:35:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:158"},{"text":"val maxByDate2 = byDate.combineByKey[(String, Double)](\n  (x:Quote) => (x.stock, x.price), \n  (d:(String, Double), l:Quote) => if (d._2 > l.price) d else (l.stock, l.price),\n  (d1:(String, Double), d2:(String, Double)) => if (d1._2 > d2._2) d1 else d2\n)\n\nmaxByDate2.cache() \n\n","dateUpdated":"2016-11-15T04:36:18+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479184553611_417322706","id":"20161115-043553_385564734","result":{"code":"SUCCESS","type":"TEXT","msg":"\nmaxByDate2: org.apache.spark.rdd.RDD[(String, (String, Double))] = ShuffledRDD[13] at combineByKey at <console>:72\n\nres13: maxByDate2.type = ShuffledRDD[13] at combineByKey at <console>:72\n"},"dateCreated":"2016-11-15T04:35:53+0000","dateStarted":"2016-11-15T04:36:18+0000","dateFinished":"2016-11-15T04:36:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:159"},{"text":"maxByDate2.take(2).toList.mkString(\"\\n\")\n","dateUpdated":"2016-11-15T04:37:25+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479184578651_862892580","id":"20161115-043618_1279952004","result":{"code":"SUCCESS","type":"TEXT","msg":"\n\n\nres15: String =\n(2012-04-05,(INOLD,1.0E8))\n(2012-10-17,(INLC,4000000.0))\n"},"dateCreated":"2016-11-15T04:36:18+0000","dateStarted":"2016-11-15T04:37:25+0000","dateFinished":"2016-11-15T04:37:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:160"},{"text":"","dateUpdated":"2016-11-15T04:37:03+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1479184613620_-1152160003","id":"20161115-043653_1726165871","dateCreated":"2016-11-15T04:36:53+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:161"}],"name":"Spark 101","id":"2C28W7W2F","angularObjects":{"2C4HM7NKF:shared_process":[],"2C1K5XD8F:shared_process":[],"2C1WPQ6BN:shared_process":[],"2C15D6H71:shared_process":[],"2C3FGKS1D:shared_process":[],"2C1UT4GFE:shared_process":[],"2C3PZ69KX:shared_process":[],"2C41BVR21:shared_process":[],"2C4AWBB7R:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}